import{f as a,c as l}from"./index-Bm2Ggpdo.js";async function m(o){try{return(await a.firestore().collection("users").where("username","==",o.toLowerCase()).get()).docs.length>0}catch(e){console.log(e.message)}}async function g(o){var e,s;try{const r=await a.firestore().collection("users").where("username","==",o).get();if(!r.empty)return{...(e=r.docs[0])==null?void 0:e.data(),docId:(s=r.docs[0])==null?void 0:s.id}}catch(r){console.log("Params",r)}}async function y(o){try{return{...(await a.firestore().collection("users").doc(o).get()).data(),docId:o}}catch(e){console.log("Error coming from fireabse service UpdateForPharams ",e)}}async function p(o){try{return(await a.firestore().collection("users").where("emailAddress","==",o.toLowerCase()).get()).docs.length>0}catch(e){console.log(e.message)}}async function d(o){try{return(await a.firestore().collection("users").where("userId","==",o).get()).docs.map(r=>({...r.data(),docId:r.id}))}catch(e){console.log(e)}}async function I(o,e){try{let s=a.firestore().collection("users"),r;return e.length>0?r=s.where("userId","not-in",[...e,o]):r=s.where("userId","!=",o),(await r.limit(4).get()).docs.map(n=>({...n.data(),docId:n.id}))}catch(s){console.log(s)}}async function h(o,e,s){try{return await a.firestore().collection("users").doc(e).update({following:s?l.arrayRemove(o):l.arrayUnion(o)})}catch(r){throw console.log(r),r}}async function f(o,e,s){try{return await a.firestore().collection("users").doc(o).update({followers:s?l.arrayRemove(e):l.arrayUnion(e)})}catch(r){throw console.log(r),r}}async function P(o,e){try{const r=(await a.firestore().collection("photos").where("userId","in",e).get()).docs.map(t=>({...t.data(),docId:t.id}));return await Promise.all(r.map(async t=>{let n=!1;t.likes.includes(o)&&(n=!0);const i=await d(t==null?void 0:t.userId),{username:u}=i[0];return{...t,username:u,IsLiked:n}}))}catch(s){console.log("This is the Error:",s)}}async function F(o){try{const e=await a.firestore().collection("photos").where("userId","==",o).get();return e.docs.length===0?{}:e.docs.map(r=>({...r.data(),docId:r.id}))}catch(e){console.log("Coming from Photos Retriver Profile function:",e)}}async function R(o,e){try{const s=await a.firestore().collection("users").where("username","==",o).where("following","array-contains",e).get(),[r={}]=s.docs.map(c=>({...c.data(),DocId:c.id}));return r.userId}catch(s){console.log("This is an error coming from the service API in the (CheckerIfPharamsISFollowing) Firebase service",s)}}async function U(o,e,s,r,c,t){await h(o,e,s),await f(r,c,t)}export{R as C,p as E,U as F,P as G,F as P,h as U,f as a,I as b,y as c,g as d,d as e,m as f};
